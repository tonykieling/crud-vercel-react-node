{"version":3,"sources":["components/Header.js","components/AddProduct.js","components/EditModal.js","components/ListProducts.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","initialState","name","weight","height","width","depth","butonLabel","originalButonColorClass","AddProduct","useState","product","setState","refName","useRef","handleChangeData","event","target","value","prevState","setBtLabel","setBtColor","disableFormController","setDisableForm","disableFormFunction","newState","btLabel","btColor","saveProduct","a","preventDefault","current","focus","data","console","log","axios","post","headers","record","message","setTimeout","autoFocus","required","id","type","onChange","ref","disabled","style","textAlign","onClick","customStyle","content","top","left","right","bottom","marginRight","transform","backgroundColor","savingData","EditModal","props","_id","setMessage","saveBtDisabled","setSaveBtDisabled","saveNewData","undefined","patch","changeProduct","error","ariaHideApp","isOpen","openModal","closeModal","url","properStyle","fontWeight","padding","noData","colSpan","color","processing","ListProduct","products","setProducts","dataTable","setDataTable","callEditModal","setCallEditModal","productToEdit","setProductToEdit","useEffect","get","action","getData","Error","fetchData","length","renderDataTable","updateProducts","incomingProduct","filter","e","tempArray","deleteProduct","wannaDelete","window","prompt","productId","delete","success","newProducts","alert","editProduct","map","index","productChanged","updateScreen","align","rowSpan","Home","App","exact","path","ListProducts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af62803.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"../style/header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"topnav\">\n      <Link to = \"/\">Home</Link>\n      <Link to = \"addProduct\">Add Product</Link>\n      <Link to = \"listProducts\">List Products</Link>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef } from \"react\";\nimport \"../style/add-product.css\";\nimport axios from \"axios\";\n\nconst initialState = {\n  name: \"\",\n  weight: \"\",\n  height: \"\",\n  width: \"\",\n  depth: \"\"\n};\n\nconst butonLabel = \"Save Product\";\nconst originalButonColorClass = \"bt-style-green\";\n\nconst AddProduct = () => {\n  const [product, setState] = useState(initialState);\n  const refName   = useRef(null);\n\n\n  const handleChangeData = event => {\n    const { name, value } = event.target;\n\n    setState(prevState => ({ \n      ...prevState, \n      [name]: value\n    }));\n\n    setBtLabel(butonLabel);\n    setBtColor(originalButonColorClass);\n  };\n\n\n  // disable form controller\n  const [disableFormController, setDisableForm] = useState(false);\n\n  const disableFormFunction = (newState = false) => {\n    setDisableForm(newState);\n  }\n\n\n  const [ btLabel, setBtLabel ] = useState(butonLabel);\n  const [ btColor, setBtColor ] = useState(originalButonColorClass);\n\n\n  const saveProduct = async(event) => {\n    event.preventDefault();\n\n    if (!product.name) {\n      setBtLabel(\"Please, fill name\");\n      setBtColor(\"bt-style-yellow\");\n      refName.current.focus();\n    } else {\n      disableFormFunction(true);\n      const url = \"/api\";\n      const data = product;\n\n      try {\nconsole.log(\"sending to server:::\", data);\n        setBtLabel(\"Processing...\");\n        const record = await axios.post( \n          url,\n          data,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            }\n        });\nconsole.log(\"receiving from server:::\", record);\n        if (record.data.message)\n          setBtLabel(butonLabel);\n        \n        else setBtLabel(\"Try again, please\");\n        \n        } catch (error) {\n          console.log(\"### error post\", error);\n        }\n\n      setState(initialState);\n      setBtLabel(\"Product has been Added succesfully!\");\n      setBtColor(\"bt-style-blue\");\n\n      // set 2.5 seconds showing the message the product was added successfully\n      setTimeout(() => {\n        setBtLabel(butonLabel);\n        setBtColor(originalButonColorClass);\n        disableFormFunction();\n        refName.current.focus();\n      }, 2500);\n    }\n  }\n\n  return (\n    <div className=\"main\">\n      <h2 className = \"main-title\"> Add Product page</h2>\n\n      <form>\n        <div>\n          <span className = \"label-form\"> Name </span> \n          <input \n            autoFocus = { true }\n            required\n            id        = \"name\"\n            className = \"text-form\" \n            type      = \"text\"\n            name      = \"name\"\n            value     = { product.name }\n            onChange  = { handleChangeData }\n            ref       = { refName }\n            disabled  = { disableFormController }\n          ></input>\n        </div>\n\n        <div>\n          <span className = \"label-form\"> Weight </span>\n          <input \n            id          = \"weight\"\n            className   = \"text-form\" \n            type        = \"number\"\n            name        = \"weight\"\n            value       = { product.weight }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          ></input>\n          <span className = \"units\">Kg</span>\n        </div>\n\n\n      <p className = \"label-form\"> Dimensions </p>\n\n        <div className = \"dimensions\">\n          <span className = \"dimensions-title\"> Height </span>\n          <input \n            id          = \"height\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"height\"\n            value       = { product.height }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className   = \"dimensions\" >\n          <span className = \"dimensions-title\"> Width </span>\n          <input \n            id          = \"width\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"width\"\n            value       = { product.width }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className = \"dimensions\">\n          <span className   = \"dimensions-title\" > Depth </span>\n          <input \n            id          = \"depth\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"depth\"\n            value       = { product.depth }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div style = {{textAlign: \"center\"}}>\n          <button\n            type = \"submit\"\n            className = { btColor }\n            onClick = { saveProduct }\n          > { btLabel }\n          </button>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;","import { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../style/modal.css\";\nimport axios from \"axios\";\nimport { GiSandsOfTime } from \"react-icons/gi\";\n\nconst customStyle = {\n  content : {\n    top              : '40%',\n    left             : '50%',\n    right            : 'auto',\n    bottom           : 'auto',\n    marginRight      : '-50%',\n    transform        : 'translate(-50%, -50%)',\n    backgroundColor  : \"lightcyan\"\n  }\n};\n\nconst savingData = (\n  <b> Saving data... <GiSandsOfTime /></b>\n);\n\nconst EditModal = props => {\n  const [{ _id, name, weight, height, width, depth }, setState] = useState(props.product);\n  const [message, setMessage] = useState(\"\");\n  const [saveBtDisabled, setSaveBtDisabled] = useState(false);\n\n  const handleChangeData = event => {\n    const { name, value } = event.target;\n\n    setState(prevState => ({ \n      ...prevState, \n      [name]: value\n    }));\n  }\n\n\n  const saveNewData = async() => {\n    setMessage(savingData);\n    setSaveBtDisabled(true);\n\n    const data = {\n      _id,\n      name,\n      weight  : weight || undefined,\n      height  : height || undefined,\n      width   : width || undefined,\n      depth   : depth || undefined\n    };\n    \n    const url = \"/api\";\n\n    try {\n      const changeProduct = await axios.patch( \n        url,\n        data,\n        {  \n          headers: { \n            \"Content-Type\": \"application/json\"\n          }\n      });\n\n      props.changeProduct(data);\n\n      setSaveBtDisabled(false);\n      if (changeProduct.data.message)\n        setMessage(changeProduct.data.message);\n      else setMessage(changeProduct.data.error);\n\n      setTimeout(() => {\n        setMessage(\"\");\n      }, 2500);\n\n    }catch(error){\n      console.log(\"error:\", error.message || error);\n    }\n  \n  }\n\n\n  return(\n    <ReactModal\n      ariaHideApp ={ false }\n      isOpen  = { props.openModal }\n      style   = { customStyle}\n    >\n      <>\n        <h2 className = \"modal-title\">Edit product</h2>\n        <form>\n          <div>\n            <span className = \"modal-label\"> Name </span> \n            <input \n              required\n              id        = \"name\"\n              className = \"text-form\" \n              type      = \"text\"\n              name      = \"name\"\n              value     = { name }\n              onChange  = { handleChangeData }\n              disabled = { saveBtDisabled }\n            />\n          </div>\n\n          <div>\n            <span className = \"modal-label\"> Weight </span>\n            <input \n              id          = \"weight\"\n              className   = \"text-form\" \n              type        = \"number\"\n              name        = \"weight\"\n              value       = { weight }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">Kg</span>\n          </div>\n\n\n        <p className = \"modal-label\"> Dimensions </p>\n\n          <div className = \"dimensions\">\n            <span className = \"dimensions-title\"> Height </span>\n            <input \n              id          = \"height\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"height\"\n              value       = { height }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n\n          <div className   = \"dimensions\" >\n            <span className = \"dimensions-title\"> Width </span>\n            <input \n              id          = \"width\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"width\"\n              value       = { width }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n\n          <div className = \"dimensions\">\n            <span className   = \"dimensions-title\" > Depth </span>\n            <input \n              id          = \"depth\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"depth\"\n              value       = { depth }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n        </form>\n\n        <div className = \"message\">\n          <p> { message }</p>\n        </div>\n\n        <div className=\"d-flex flex-column bt-position\">\n          <button \n            // className = \"bt-style close\" \n            // className = {`bt-style close ${ saveBtDisabled ? \"disabled-bt-style\" : \"\" }`}\n            className = {`${ saveBtDisabled ? \"disabled-bt-style\" : \"bt-style close\" }`}\n            // style = { saveBtDisabled ? \"disabled-bt-style\" : \"\"}\n            onClick = {() => props.closeModal()} \n            disabled = { saveBtDisabled }\n          >\n            Close\n          </button>\n          <button \n            // className = \"bt-style save\" \n            className = {`${ saveBtDisabled ? \"disabled-bt-style\" : \"bt-style save\" }`}\n            // style = { saveBtDisabled ? \"disabled-bt-style\" : \"\"}\n            onClick = {() => saveNewData()}\n            disabled = { saveBtDisabled }\n          >\n            Save\n          </button>\n        </div>\n      </>\n    </ReactModal>\n  );\n};\n\nexport default EditModal;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../style/list-products.css\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { RiDatabase2Line } from \"react-icons/ri\";\nimport { FcSearch } from \"react-icons/fc\";\nimport EditModal from \"./EditModal.js\";\nimport { Link } from \"react-router-dom\";\n\n\nconst url = \"/api\";\n\nconst properStyle = {\n  textAlign: \"center\",  \n  fontWeight: \"bold\",\n  padding: \"1rem\"\n}\n\nconst noData = (\n  <tr>\n    <td \n      colSpan=\"7\" \n      style = {\n        {\n          ...properStyle, \n          color: \"red\"\n        }\n      }\n    >\n      <p>DB is empty. <RiDatabase2Line color = \"gray\"/></p>\n      <p>Add new products by clicking in </p>\n      <p><Link to = \"/addProduct\"><span style={{color: \"blue\"}}>Add a new Product</span></Link></p>\n    </td>\n  </tr>\n);\n\nconst processing = (\n  <tr>\n    <td\n      colSpan = \"7\"\n      style = {\n        {\n          ...properStyle,\n          color: \"green\",\n          padding: \"2rem\"\n        }\n      }\n    >\n      <FcSearch /> Processing the db request...\n    </td>\n  </tr>\n);\n\n\nconst ListProduct = () => {\n\n  const [products, setProducts] = useState(\"\");\n\n  const [dataTable, setDataTable] = useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n\n  const [callEditModal, setCallEditModal] = useState(false);\n\n  const [productToEdit, setProductToEdit] = useState(\"\");\n\n\n  useEffect(() => {\n    setDataTable(processing);\n\n    const fetchData = async() => {\n  \n      try {\n        const getData = await axios.get( \n          url,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            },\n            data: {\n              action: \"name\"\n            }\n        });\n\n        if (getData.data.content)\n          setProducts(getData.data.content);\n        else\n          throw new Error();\n          \n        } catch (error) {\n          // console.log(\"### error post\", error.message);\n          setDataTable(null);\n        }\n    }\n\n    fetchData();\n    return () => {\n      setProducts({});\n      setDataTable({});\n      setMessage(\"\");\n      setCallEditModal(\"\");\n      setProductToEdit(\"\");\n    };\n    //eslint-disable-next-line\n  }, []);\n\n\n  useEffect(() => {\n    products && products.length && setDataTable(renderDataTable(products));\n    //eslint-disable-next-line\n  }, [products]);\n\n\n  const updateProducts = (action = \"update\", incomingProduct) => {\n    if (action === \"remove\")\n      return (products.filter(e => e._id !== incomingProduct));\n    else {\n      const tempArray = products.filter(e => e._id !== incomingProduct._id);\n      return [...tempArray, incomingProduct];\n    }\n  }\n\n\n  const deleteProduct = async(product) => {\n    const wannaDelete = window.prompt(`Type product's name (${product.name}) to confirm you wanna delete it:`);\n\n    if (wannaDelete === product.name) {\n      const data = { productId: product._id };\n      try {\n        setMessage(\"Deleting...\");\n        const deleteProduct = await axios.delete( \n          url,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            },\n            data\n        });\n\n        if (deleteProduct.data.success) {\n          setMessage(`Product \"${product.name}\" has been deleted successfully!`);\n\n          const newProducts = updateProducts(\"remove\", product._id);\n          setProducts(newProducts);\n        } else \n          throw new Error(deleteProduct.data.error);\n          // setMessage(deleteProduct.data.error);\n\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 3000);\n        \n        } catch (error) {\n          console.log(\"### error post\", error);\n          console.log(\"### error.message\", error.message);\n          setMessage(error.message || \"Something bad happened, please try again later. ;)\");\n        }\n    } else\n      window.alert(`Wrong product's name.\\n\\n  You typed: ${wannaDelete || \"<empty>\"}\\n  It has to be: ${product.name}`);\n  };\n\n\n  const editProduct = product => {\n    setProductToEdit(product);\n    setCallEditModal(true);\n  }\n\n\n  const renderDataTable = products => {\n    return products.map((product, index) => {\n      const { _id, name, weight, height, width, depth } = product;\n\n      return (\n        <tr key = { _id }>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ index + 1 }</td>\n          <td className = \"set-left\" onClick = {() => editProduct(product)}>{ name}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ weight}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ height}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ width}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ depth}</td>\n\n          <td \n            className = \"icons\" \n            onClick = {() => editProduct(product)}\n          >\n            <div className = \"tooltip\">\n              <span className = \"tooltip-text\">Edit product</span>\n              <FaEdit color = \"green\" />\n            </div>\n          </td>\n          <td \n            className   = \"icons\" \n            onClick     = { () => deleteProduct(product)}\n          >\n            <div className = \"tooltip\">\n              <span className = \"tooltip-text\">Delete product</span>\n              <FaTrash color = \"darkred\" />\n            </div>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n\n  const updateScreen = product => {\n    const newProducts = updateProducts(\"update\", product);\n    setProducts(newProducts);\n  }\n\n\n\n  return (\n    <div className=\"main\">\n      {callEditModal && \n        <EditModal\n          openModal   = { callEditModal }\n          closeModal  = { () => setCallEditModal(false) }\n          product     = { productToEdit }\n          changeProduct = { (productChanged) => updateScreen(productChanged)}\n        />\n      }\n\n      <h2 className = \"main-title\"> List Products page</h2>\n\n      <div className = \"message\">\n          <p> { message }</p>\n      </div>\n\n      <table>\n        <thead id = \"color-head\">\n          <tr style={{align:\"center\"}} >\n            <th rowSpan=\"2\" className = \"num-head\"> #</th>\n            <th rowSpan=\"2\" className = \"name-head\" >Name</th>\n            <th rowSpan=\"2\" className = \"others-head\" >Weight (Kg)</th>\n            <th rowSpan=\"1\" colSpan=\"3\">Dimensions (cm)</th>\n            <th rowSpan=\"2\" colSpan=\"2\">Actions</th>\n          </tr>\n          <tr>\n            <th className = \"others-head\">Height</th>\n            <th className = \"others-head\">Width</th>\n            <th className = \"others-head\">Depth</th>\n          </tr>\n        </thead>\n        <tbody>\n          { dataTable || noData }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListProduct;","import React from \"react\";\nimport \"../style/home.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-settings\">\n      <h1> Hello Mr. Dumpty</h1>\n      <h2> Welcome and enjoy the system </h2>\n      <h2>In the bar above you can reach and work on the folowing features:</h2>\n      <div className = \"list-position\">\n        <ul>\n          <Link to = \"/addProduct\"><h2>1. Add a new Product</h2></Link>\n          <Link to = \"/listProducts\"><h2>2. List, Edit and Delete a product</h2></Link>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./components/Header.js\";\nimport AddProduct from \"./components/AddProduct.js\";\nimport ListProducts from \"./components/ListProducts.js\";\nimport Home from \"./components/Home.js\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path = \"/\">\n          <Home />\n        </Route>\n        <Route exact path = \"/addProduct\">\n          <AddProduct />\n        </Route>\n\n        <Route exact path = \"/listProducts\">\n          <ListProducts />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}