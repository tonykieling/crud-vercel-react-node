{"version":3,"sources":["components/Header.js","components/AddProduct.js","components/EditModal.js","components/ListProducts.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","initialState","name","weight","height","width","depth","butonLabel","originalButonColorClass","AddProduct","useState","product","setState","refName","useRef","handleChangeData","event","target","value","prevState","setBtLabel","setBtColor","disableFormController","setDisableForm","disableFormFunction","newState","btLabel","btColor","saveProduct","a","preventDefault","current","focus","data","axios","post","headers","message","console","log","setTimeout","autoFocus","required","id","type","onChange","ref","disabled","style","textAlign","onClick","customStyle","content","top","left","right","bottom","marginRight","transform","backgroundColor","savingData","EditModal","props","_id","setMessage","saveBtDisabled","setSaveBtDisabled","colorMessage","setColorMessage","saveNewData","undefined","patch","changeProduct","error","ariaHideApp","isOpen","openModal","closeModal","url","properStyle","fontWeight","padding","noData","colSpan","color","processing","ListProduct","products","setProducts","dataTable","setDataTable","callEditModal","setCallEditModal","productToEdit","setProductToEdit","useEffect","fetchData","get","action","getData","Error","length","renderDataTable","updateProducts","incomingProduct","filter","e","tempArray","deleteProduct","wannaDelete","window","prompt","productId","delete","success","newProducts","alert","editProduct","map","index","productChanged","updateScreen","align","rowSpan","Home","App","exact","path","ListProducts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c21662b.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"../style/header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"topnav\">\n      <Link to = \"/\">Home</Link>\n      <Link to = \"addProduct\">Add Product</Link>\n      <Link to = \"listProducts\">List Products</Link>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef } from \"react\";\nimport \"../style/add-product.css\";\nimport axios from \"axios\";\n\nconst initialState = {\n  name: \"\",\n  weight: \"\",\n  height: \"\",\n  width: \"\",\n  depth: \"\"\n};\n\nconst butonLabel = \"Save Product\";\nconst originalButonColorClass = \"bt-style-green\";\n\nconst AddProduct = () => {\n  const [product, setState] = useState(initialState);\n  const refName   = useRef(null);\n\n\n  const handleChangeData = event => {\n    const { name, value } = event.target;\n\n    setState(prevState => ({ \n      ...prevState, \n      [name]: value\n    }));\n\n    setBtLabel(butonLabel);\n    setBtColor(originalButonColorClass);\n  };\n\n\n  // disable form controller\n  const [disableFormController, setDisableForm] = useState(false);\n\n  const disableFormFunction = (newState = false) => {\n    setDisableForm(newState);\n  }\n\n\n  const [ btLabel, setBtLabel ] = useState(butonLabel);\n  const [ btColor, setBtColor ] = useState(originalButonColorClass);\n\n\n  const saveProduct = async(event) => {\n    event.preventDefault();\n\n    if (!product.name) {\n      setBtLabel(\"Please, fill name\");\n      setBtColor(\"bt-style-yellow\");\n      refName.current.focus();\n    } else {\n      disableFormFunction(true);\n      const url = \"/api\";\n      const data = product;\n\n      try {\n        setBtLabel(\"Processing...\");\n        const record = await axios.post( \n          url,\n          data,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            }\n        });\n        \n        if (record.data.message)\n          setBtLabel(butonLabel);\n        \n        else setBtLabel(\"Try again, please\");\n        \n        } catch (error) {\n          console.log(\"### error post\", error);\n        }\n\n      setState(initialState);\n      setBtLabel(\"Product has been Added succesfully!\");\n      setBtColor(\"bt-style-blue\");\n\n      // set 2.5 seconds showing the message the product was added successfully\n      setTimeout(() => {\n        setBtLabel(butonLabel);\n        setBtColor(originalButonColorClass);\n        disableFormFunction();\n        refName.current.focus();\n      }, 2500);\n    }\n  }\n\n  return (\n    <div className=\"main\">\n      <h2 className = \"main-title\"> Add Product page</h2>\n\n      <form>\n        <div>\n          <span className = \"label-form\"> Name </span> \n          <input \n            autoFocus = { true }\n            required\n            id        = \"name\"\n            className = \"text-form\" \n            type      = \"text\"\n            name      = \"name\"\n            value     = { product.name }\n            onChange  = { handleChangeData }\n            ref       = { refName }\n            disabled  = { disableFormController }\n          />\n        </div>\n\n        <div>\n          <span className = \"label-form\"> Weight </span>\n          <input \n            id          = \"weight\"\n            className   = \"text-form\" \n            type        = \"number\"\n            name        = \"weight\"\n            value       = { product.weight }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          />\n          <span className = \"units\">Kg</span>\n        </div>\n\n\n      <p className = \"label-form\"> Dimensions </p>\n\n        <div className = \"dimensions\">\n          <span className = \"dimensions-title\"> Height </span>\n          <input \n            id          = \"height\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"height\"\n            value       = { product.height }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          />\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className   = \"dimensions\" >\n          <span className = \"dimensions-title\"> Width </span>\n          <input \n            id          = \"width\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"width\"\n            value       = { product.width }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          />\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className = \"dimensions\">\n          <span className   = \"dimensions-title\" > Depth </span>\n          <input \n            id          = \"depth\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"depth\"\n            value       = { product.depth }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          />\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div style = {{textAlign: \"center\"}}>\n          <button\n            type = \"submit\"\n            className = { btColor }\n            onClick = { saveProduct }\n            disabled    = { disableFormController }\n          > { btLabel }\n          </button>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;","import { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../style/modal.css\";\nimport axios from \"axios\";\nimport { GiSandsOfTime } from \"react-icons/gi\";\n\nconst customStyle = {\n  content : {\n    top              : '40%',\n    left             : '50%',\n    right            : 'auto',\n    bottom           : 'auto',\n    marginRight      : '-50%',\n    transform        : 'translate(-50%, -50%)',\n    backgroundColor  : \"lightcyan\"\n  }\n};\n\nconst savingData = (\n  <b> Saving data... <GiSandsOfTime /></b>\n);\n\nconst EditModal = props => {\n  const [{ _id, name, weight, height, width, depth }, setState] = useState(props.product);\n  const [message, setMessage] = useState(\"\");\n  const [saveBtDisabled, setSaveBtDisabled] = useState(false);\n\n  const [colorMessage, setColorMessage] = useState(\"\");\n\n  const handleChangeData = event => {\n    const { name, value } = event.target;\n\n    setState(prevState => ({ \n      ...prevState, \n      [name]: value\n    }));\n\n    setMessage(\"\");\n  };\n\n  // function to check whether there is data modification\n  const checkDataChanged = () => {\n    return (\n      (\n        name !== props.product.name || \n        weight !== props.product.weight ||\n        height !== props.product.height ||\n        width !== props.product.width ||\n        depth !== props.product.depth\n      )\n        ? true\n        : false\n    );\n  };\n\n\n  const saveNewData = async() => {\n    \n    const changes = checkDataChanged();\n    if (!changes) {\n      setColorMessage(\"message-blue\");\n      setMessage(\"No data to be changed\");\n      return;\n    }\n    \n    setMessage(savingData);\n    setSaveBtDisabled(true);\n    setColorMessage(\"message-green\");\n\n    const data = {\n      _id,\n      name,\n      weight  : weight || undefined,\n      height  : height || undefined,\n      width   : width || undefined,\n      depth   : depth || undefined\n    };\n    \n    const url = \"/api\";\n\n    try {\n      const changeProduct = await axios.patch( \n        url,\n        data,\n        {  \n          headers: { \n            \"Content-Type\": \"application/json\"\n          }\n      });\n\n      props.changeProduct(data);\n\n      setSaveBtDisabled(false);\n      if (changeProduct.data.message) {\n        setColorMessage(\"message-blue\");\n        setMessage(changeProduct.data.message);\n      } else {\n        setColorMessage(\"message-red\");\n        setMessage(changeProduct.data.error);\n      } \n\n    }catch(error){\n      console.log(\"error:\", error.message || error);\n    }\n  \n  }\n\n\n  return(\n    <ReactModal\n      ariaHideApp ={ false }\n      isOpen  = { props.openModal }\n      style   = { customStyle}\n    >\n      <>\n        <h2 className = \"modal-title\">Edit product</h2>\n        <form>\n          <div>\n            <span className = \"modal-label\"> Name </span> \n            <input \n              required\n              id        = \"name\"\n              className = \"text-form\" \n              type      = \"text\"\n              name      = \"name\"\n              value     = { name }\n              onChange  = { handleChangeData }\n              disabled = { saveBtDisabled }\n            />\n          </div>\n\n          <div>\n            <span className = \"modal-label\"> Weight </span>\n            <input \n              id          = \"weight\"\n              className   = \"text-form\" \n              type        = \"number\"\n              name        = \"weight\"\n              value       = { weight }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">Kg</span>\n          </div>\n\n\n        <p className = \"modal-label\"> Dimensions </p>\n\n          <div className = \"dimensions\">\n            <span className = \"dimensions-title\"> Height </span>\n            <input \n              id          = \"height\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"height\"\n              value       = { height }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n\n          <div className   = \"dimensions\" >\n            <span className = \"dimensions-title\"> Width </span>\n            <input \n              id          = \"width\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"width\"\n              value       = { width }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n\n          <div className = \"dimensions\">\n            <span className   = \"dimensions-title\" > Depth </span>\n            <input \n              id          = \"depth\"\n              type        = \"number\"\n              className   = \"dimensions-fields\" \n              name        = \"depth\"\n              value       = { depth }\n              onChange    = { handleChangeData}\n              disabled = { saveBtDisabled }\n            />\n            <span className = \"units\">cm</span>\n          </div>\n        </form>\n\n        <div className=\"d-flex flex-column bt-position\">\n          <button \n            className = {`${ saveBtDisabled ? \"disabled-bt-style\" : \"bt-style close\" }`}\n            onClick = {() => props.closeModal()} \n            disabled = { saveBtDisabled }\n          >\n            Close\n          </button>\n          <button \n            className = {`${ saveBtDisabled ? \"disabled-bt-style\" : \"bt-style save\" }`}\n            onClick = {() => saveNewData()}\n            disabled = { saveBtDisabled }\n          >\n            Save\n          </button>\n        </div>\n\n        <div className = {`message ${colorMessage}`}>\n          <p> { message }</p>\n        </div>\n      </>\n    </ReactModal>\n  );\n};\n\nexport default EditModal;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../style/list-products.css\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { RiDatabase2Line } from \"react-icons/ri\";\nimport { FcSearch } from \"react-icons/fc\";\nimport EditModal from \"./EditModal.js\";\nimport { Link } from \"react-router-dom\";\n\n\nconst url = \"/api\";\n\nconst properStyle = {\n  textAlign: \"center\",  \n  fontWeight: \"bold\",\n  padding: \"1rem\"\n}\n\nconst noData = (\n  <tr>\n    <td \n      colSpan=\"7\" \n      style = {\n        {\n          ...properStyle, \n          color: \"red\"\n        }\n      }\n    >\n      <p>DB is empty. <RiDatabase2Line color = \"gray\"/></p>\n      <p>Add new products by clicking in </p>\n      <p><Link to = \"/addProduct\"><span style={{color: \"blue\"}}>Add Product</span></Link></p>\n    </td>\n  </tr>\n);\n\nconst processing = (\n  <tr>\n    <td\n      colSpan = \"7\"\n      style = {\n        {\n          ...properStyle,\n          color: \"green\",\n          padding: \"2rem\"\n        }\n      }\n    >\n      <FcSearch /> Processing DB query...\n    </td>\n  </tr>\n);\n\n\nconst ListProduct = () => {\n\n  const [products, setProducts] = useState(\"\");\n\n  const [dataTable, setDataTable] = useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n  const [colorMessage, setColorMessage] = useState(\"\");\n\n  const [callEditModal, setCallEditModal] = useState(false);\n\n  const [productToEdit, setProductToEdit] = useState(\"\");\n\n\n  useEffect(() => {\n    setDataTable(processing);\n\n    const fetchData = async() => {\n  \n      try {\n        const getData = await axios.get( \n          url,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            },\n            data: {\n              action: \"name\"\n            }\n        });\n\n        if (getData.data.content)\n          setProducts(getData.data.content);\n        else\n          throw new Error();\n          \n        } catch (error) {\n          // console.log(\"### error post\", error.message);\n          setDataTable(null);\n        }\n    }\n\n    fetchData();\n    return () => {\n      setProducts({});\n      setDataTable({});\n      setMessage(\"\");\n      setCallEditModal(\"\");\n      setProductToEdit(\"\");\n    };\n    //eslint-disable-next-line\n  }, []);\n\n\n  useEffect(() => {\n    products && products.length && setDataTable(renderDataTable(products));\n    //eslint-disable-next-line\n  }, [products]);\n\n\n  const updateProducts = (action = \"update\", incomingProduct) => {\n    if (action === \"remove\")\n      return (products.filter(e => e._id !== incomingProduct));\n    else {\n      const tempArray = products.filter(e => e._id !== incomingProduct._id);\n      return [...tempArray, incomingProduct];\n    }\n  }\n\n\n  const deleteProduct = async(product) => {\n    const wannaDelete = window.prompt(`Type product's name (${product.name}) to confirm you wanna delete it:`);\n\n    if (wannaDelete === product.name) {\n      const data = { productId: product._id };\n      try {\n        setMessage(\"Deleting...\");\n        setColorMessage(\"message-green\");\n        const deleteProduct = await axios.delete( \n          url,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            },\n            data\n        });\n\n        if (deleteProduct.data.success) {\n          setColorMessage(\"message-blue\");\n          setMessage(`Product \"${product.name}\" has been deleted successfully!`);\n\n          const newProducts = updateProducts(\"remove\", product._id);\n          setProducts(newProducts);\n        } else \n          throw new Error(deleteProduct.data.error);\n          // setMessage(deleteProduct.data.error);\n\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 4000);\n        \n        } catch (error) {\n          setColorMessage(\"message-red\");\n          setMessage(error.message || \"Something bad happened, please try again later. ;)\");\n        }\n    } else\n      window.alert(`\\nWrong product's name.\\n\\n  You typed: ${wannaDelete || \"<empty>\"}\\n  It has to be: ${product.name}`);\n  };\n\n\n  const editProduct = product => {\n    setProductToEdit(product);\n    setCallEditModal(true);\n  }\n\n\n  const renderDataTable = products => {\n    return products.map((product, index) => {\n      const { _id, name, weight, height, width, depth } = product;\n\n      return (\n        <tr key = { _id }>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ index + 1 }</td>\n          <td className = \"set-left\" onClick = {() => editProduct(product)}>{ name}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ weight}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ height}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ width}</td>\n          <td className = \"set-center\" onClick = {() => editProduct(product)}>{ depth}</td>\n\n          <td \n            className = \"icons\" \n            onClick = {() => editProduct(product)}\n          >\n            <div className = \"tooltip\">\n              <span className = \"tooltip-text\">Edit product</span>\n              <FaEdit color = \"green\" />\n            </div>\n          </td>\n          <td \n            className   = \"icons\" \n            onClick     = { () => deleteProduct(product)}\n          >\n            <div className = \"tooltip\">\n              <span className = \"tooltip-text\">Delete product</span>\n              <FaTrash color = \"darkred\" />\n            </div>\n          </td>\n        </tr>\n      )\n    })\n  }\n\n\n  const updateScreen = product => {\n    const newProducts = updateProducts(\"update\", product);\n    setProducts(newProducts);\n  }\n\n\n\n  return (\n    <div className=\"main\">\n      {callEditModal && \n        <EditModal\n          openModal   = { callEditModal }\n          closeModal  = { () => setCallEditModal(false) }\n          product     = { productToEdit }\n          changeProduct = { (productChanged) => updateScreen(productChanged)}\n        />\n      }\n\n      <h2 className = \"main-title\"> List Products page</h2>\n\n      <div className = {`message ${colorMessage}`}>\n          <p> { message }</p>\n      </div>\n\n      <table>\n        <thead id = \"color-head\">\n          <tr style={{align:\"center\"}} >\n            <th rowSpan=\"2\" className = \"num-head\"> #</th>\n            <th rowSpan=\"2\" className = \"name-head\" >Name</th>\n            <th rowSpan=\"2\" className = \"others-head\" >Weight (Kg)</th>\n            <th rowSpan=\"1\" colSpan=\"3\">Dimensions (cm)</th>\n            <th rowSpan=\"2\" colSpan=\"2\">Actions</th>\n          </tr>\n          <tr>\n            <th className = \"others-head\">Height</th>\n            <th className = \"others-head\">Width</th>\n            <th className = \"others-head\">Depth</th>\n          </tr>\n        </thead>\n        <tbody>\n          { dataTable || noData }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListProduct;","import React from \"react\";\nimport \"../style/home.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-settings\">\n      <h1> Hello Mr. Dumpty</h1>\n      <h2> Welcome and enjoy the system </h2>\n      <h2>In the bar above you can reach and work on the folowing features:</h2>\n      <div className = \"list-position\">\n        <ul>\n          <Link to = \"/addProduct\"><h2>1. Add a new Product</h2></Link>\n          <Link to = \"/listProducts\"><h2>2. List, Edit and Delete a product</h2></Link>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./components/Header.js\";\nimport AddProduct from \"./components/AddProduct.js\";\nimport ListProducts from \"./components/ListProducts.js\";\nimport Home from \"./components/Home.js\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path = \"/\">\n          <Home />\n        </Route>\n        <Route exact path = \"/addProduct\">\n          <AddProduct />\n        </Route>\n\n        <Route exact path = \"/listProducts\">\n          <ListProducts />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}